{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyMvo5L7OmtEjQTVbcejyAV8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/alfaruqks/uas/blob/main/visualisasi%20data%3Amatplolip\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Matplolip"
      ],
      "metadata": {
        "id": "AmvTzvSbQyAT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. Jenis - Jenis Plot"
      ],
      "metadata": {
        "id": "wwaD3o7ZQ3zj"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "vghjDiJ6QthM",
        "outputId": "37294f22-8d2c-40d4-ea9a-72ea9c31d367"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "from matplotlib import pyplot as plt\n",
        "\n",
        "x = [4,6,10,13,16,20,22,24,26,28,30]\n",
        "y = [100,120,160,180,210,240,270,300,320,330,350]\n",
        "plt.plot(x,y)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. menambah label dan title"
      ],
      "metadata": {
        "id": "BKzbyGIxSywO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "lsp2MdtgXtjM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%\n",
        "sumbux = [4,6,10,13,16,20,22,24,26,28,30]\n",
        "sumbuy = [100,120,160,180,210,240,270,300,320,330,350]\n",
        "plt.plot(sumbux,sumbuy)\n",
        "\n",
        "plt.title('Kenaikan Subcribers Berdasarkan Hari')\n",
        "plt.xlabel('Hari')\n",
        "plt.ylabel('Jumlah Subcribers')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "TWs2_cO-S5NL"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "%matplotlib notebook\n",
        "\n",
        "\n",
        "hari = [4,6,10,13,16,20,22,24,26,28,30]\n",
        "#sumbu y1\n",
        "young_lex = [100,120,160,180,210,240,270,300,320,330,350]\n",
        "plt.plot(hari,young_lex)\n",
        "# sumbu y2\n",
        "\n",
        "atta = [120,140,200,230,260,280,290,320,360,380,400]\n",
        "plt.title('Kenaikan Subcribers Berdasarkan Hari')\n",
        "plt.xlabel('Hari')\n",
        "plt.ylabel('Jumlah Subcribers')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "3JPq-O3cUqzy"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MeA2QfgPWA9i"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}